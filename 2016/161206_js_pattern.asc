== 161206_js_pattern.asc

1. 좋은 소프트웨어 만들기 중에서 ..

===== 1.2.1 단위 테스트는 미래에 대한 투자다.
준비, 실행, 단언의 세 가지 부분을 가지고 있다.

TDD를 실천하는 개발자는 애플리케이션에 어떤 변화가 생길 때마다 다음 단계를 밟는다.
여기서 변화란 완전히 새로운 기능을 추가하거나 기존 시스템을 고치고 버그를 잡는 일이다.

. 완벽히 변경하면 성공하나 그렇게 되기전까지는 반드시 실패하는 단위 테스트를 작성한다.
. 테스트가 성공할 수 있을 만큼만 `최소한` 으로 코딩한다.
. 애플리케이션 코드를 리팩토링하여 중복을 제거한다.

애플리케이션 코드를 바꾸고 나서 테스트를 작성하면 되지 않나 싶을 수도 있다. 거듭 말하지만 이런 욕망에 굴하지 말라. 여러분이 바꾼 코드가 그 이후에 만든 테스트를 그냥 통과시킬 지 확신이 없기 때문이다.

===== 1.2.3 테스트하기 쉬운 코드를 만들어라.

테스트 주도 개발을 실천하면 여러가지 혜택이 있다.
1. 장기적인 믿음성을 보장하는 단위 테스틀 꾸러미를 구축한다.
2. 애플리케이션 객체에 적확한 인터페이스를 설계할 때 도움이 된다.
3. 놀랍게도 단위 테스트를 통해 코드를 더 빨리 개발할 수 있게 된다.
