== 161207_js_pattern.asc
66~86

==== 자스민

===== 테스트 꾸러미와 스펙
테스트 꾸러미는 스펙, 즉 개별 테스트로 구현되며 각 스펙은 전역함수 it 로 정의된다.
`describe`함수는 두 인자를 받는데 문자열과 함수이다.
`it` 함수도 describe 처럼 인자 2개를 받는데 문자열과 한 개 이상의 기대식을 가진 함수이다.

===== 기대식과 매처
. `expect`함수는  테스트 대상 코드가 낸 실제값을 인자로 받아 기댓값과 견주어 본다.
. `toBe`매처는 이름에서 짐작할 수 있듯이 같은 객체어야 한다는 것이다.

===== 스파이
. 테스트 더블 : 어떤 함수 / 객체 의 본래 구현부를 테스트 도중 다른 코드로 대체한 것. 보통 다음 다섯가지를 테스트 더블이라고 한다.
.. 더미 : 보통 인자 리스트를 채우기 위해 사용되며 전달은 하지만 실제로 사용되지는 않는다.
.. stub : 더미를 조금 더 구현하여 아직 개발되지 않은 클래스나 메서드가 실제 작동하는 것처럼 보이게 만든 객체로 보통 리턴값은 하드코딩됨.
:: spy : stub 과 비슷하지만 내부적으로 기록을 남긴다는 점이 다르다. 특정 객체가 사용되었는지 예상되는 메서드가 특정한 인자로 호출되었는지 등의 상황을 감시하고 이러한 정보를 제공하기도 한다.
:: fake 모의체 : stub 에서 조금 더 발전하여서 실제로 간단히 구현된 코드를 갖고는 있지만, 운영 환경에서 사용할 수 없는 객체이다.
:: mock 모형 : 더미, stub, 스파이를 혼합한 형태와 비슷하나 행위를 검증하는 용도로 주로 사용된다.


=== 2.2 의존성 프레임 워크

====== 2.2.3 의존성 주입의 모든 것

어떤 객체를 코딩하든 어떤 객체를 생성하든지 스스로 다음 질문을 해보자. 한 가지라도 답변이 예 라면 직접 인스턴스화하지말고 주입하는 방향으로 생각을 전환하라.

. 객체 또는 의존성 중 어느 하나라도 DB, 설정파일, HTTP 기타 인프라 등의 외부자원에 의존하는가 ?
. 객체 내부에서 발생할지 모를 에러를 테스트에서 고려해야 하나?
. 특정한 방향으로 객체를 작동시켜야할 테스트가 있는가?
. 이 서드파티 제공 객체가 아니라 온전히 내가 소유한 객체인가?

====== 2.2.4 사례 연구. 경략급 의존성 주입 프레임워크 개발
